#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";
        Grave {
            bindings = <&kp GRAVE>;
            key-positions = <22 21>;
        };

        Backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <34 33>;
        };

        Semicolon {
            bindings = <&kp SEMICOLON>;
            key-positions = <32 33>;
        };
    };
};

/ {
    behaviors {
        hrml: hrml {
            compatible = "zmk,behavior-hold-tap";
            label = "HRML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <6 18 19 20 21 30 31 32 33 39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
            tapping-term-ms = <200>;
        };

        hrmr: hrmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
                bht: balanced_hold_taps {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <280>;    // <---[[moderate duration]]
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            quick-tap-ms = <175>;       // repeat on tap-into-hold
            require-prior-idle-ms = <150>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&trans  &kp Q               &kp W                 &kp E             &kp R                 &kp T         &kp Y      &kp U  &kp I      &kp O    &kp P             &trans
&mo 2   &hrml LEFT_SHIFT A  &hrml LEFT_CONTROL S  &hrml LEFT_ALT D  &hrml LEFT_COMMAND F  &kp G         &kp H      &kp J  &kp K      &kp L    &kp SINGLE_QUOTE  &trans
&trans  &kp Z               &kp X                 &kp C             &kp V                 &kp B         &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH          &trans
                                                  &kp TAB           &kp SPACE             &kp ESCAPE    &kp ENTER  &mo 1  &trans
            >;
        };

        CHA {
            bindings = <
&trans  &kp EXCL          &kp STAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT       &kp CARET      &kp N7  &kp N8  &kp N9  &kp DOLLAR   &trans
&trans  &kp LESS_THAN     &kp MINUS  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EQUAL    &kp AMPERSAND  &kp N4  &kp N5  &kp N6  &kp HASH     &trans
&trans  &kp GREATER_THAN  &kp PLUS   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDER    &kp N0         &kp N1  &kp N2  &kp N3  &kp PERCENT  &trans
                                     &trans                &trans                 &trans       &trans         &trans  &trans
            >;
        };

        NAV {
            bindings = <
&trans  &trans  &kp BSPC  &kp UP    &kp DEL    &trans    &trans        &trans        &trans        &trans        &trans        &sys_reset
&trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans    &trans        &trans        &trans        &trans        &trans        &bootloader
&trans  &trans  &trans    &trans    &trans     &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
                          &trans    &trans     &trans    &trans        &trans        &trans
            >;
        };
    };
};
